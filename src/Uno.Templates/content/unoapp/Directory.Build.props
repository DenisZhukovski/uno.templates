<Project>
  <PropertyGroup>
    <DotNetVersion>$baseTargetFramework$</DotNetVersion>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <DebugType>portable</DebugType>
    <DebugSymbols>True</DebugSymbols>
    <!--#if (cpm)-->

    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <!--#endif-->

    <!--#if (mauiEmbedding)-->
    <!--
      Adding NoWarn to remove build warnings
      NU1507: Warning when there are multiple package sources when using CPM with no source mapping
      NETSDK1201: Warning that specifying RID won't create self containing app
      NETSDK1023:	Microsoft.Maui.Graphics reference required to avoid build error causes warning because it's already implicitly referenced by Maui SDK
      PRI257: Ignore default language (en) not being one of the included resources (eg en-us, en-uk)
    -->
    <NoWarn>$(NoWarn);NU1507;NETSDK1201;NETSDK1023;PRI257</NoWarn>
    <!--#else-->
    <!--
      Adding NoWarn to remove build warnings
      NU1507: Warning when there are multiple package sources when using CPM with no source mapping
      NETSDK1201: Warning that specifying RID won't create self containing app
      PRI257: Ignore default language (en) not being one of the included resources (eg en-us, en-uk)
    -->
    <NoWarn>$(NoWarn);NU1507;NETSDK1201;PRI257</NoWarn>
    <!--#endif-->
    <!--#if (mauiEmbedding)-->

    <MauiVersion Condition=" '$(MauiVersion)' == '' ">$DefaultMauiVersion$</MauiVersion>
    <AndroidMaterialVersion  Condition=" '$(AndroidMaterialVersion)' == '' ">1.10.0.1</AndroidMaterialVersion>
    <AndroidXNavigationVersion  Condition=" '$(AndroidXNavigationVersion)' == '' ">2.6.0.1</AndroidXNavigationVersion>
    <AndroidXCollectionVersion  Condition=" '$(AndroidXCollectionVersion)' == '' ">1.3.0.1</AndroidXCollectionVersion>
    <!--#endif-->

    <!-- Required for Hot Reload (See https://github.com/dotnet/sdk/issues/36666) -->
    <IncludeSourceRevisionInInformationalVersion Condition="'$(Configuration)'=='Debug'">false</IncludeSourceRevisionInInformationalVersion>
  </PropertyGroup>

  <Choose>
    <!--
      Defaults are provided by the Uno.Sdk. Uncomment these and provide the SupportedOSPlatformVersion if you need to customize
      the supported OS version for a specific platform for your application.
    -->
    <!-- <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
      <PropertyGroup>
        <SupportedOSPlatformVersion>21.0</SupportedOSPlatformVersion>
      </PropertyGroup>
    </When> -->
    <!-- <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
      <PropertyGroup>
        <SupportedOSPlatformVersion>14.2</SupportedOSPlatformVersion>
      </PropertyGroup>
    </When> -->
    <!-- <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">
      <PropertyGroup>
        <SupportedOSPlatformVersion>14.0</SupportedOSPlatformVersion>
      </PropertyGroup>
    </When> -->
    <When Condition="$(TargetFramework.Contains('windows10'))">
      <PropertyGroup>
        <!--
          Defaults are provided by the Uno.Sdk. Uncomment these and provide the SupportedOSPlatformVersion and/or the
          TargetPlatformMinVersion if you need to customize the supported OS version for your application.
        -->
        <!-- <SupportedOSPlatformVersion>10.0.18362.0</SupportedOSPlatformVersion> -->
        <!-- <TargetPlatformMinVersion>10.0.18362.0</TargetPlatformMinVersion> -->
        <RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
        <EnableCoreMrtTooling Condition=" '$(BuildingInsideVisualStudio)' != 'true' ">false</EnableCoreMrtTooling>
      </PropertyGroup>
    </When>
  </Choose>

  <!--
    If working on a single target framework, copy solution-config.props.sample to solution-config.props
    and uncomment the appropriate lines in solution-config.props to build for the desired platforms only.

    https://platform.uno/docs/articles/guides/solution-building-single-targetframework.html
  -->
  <Import Project="solution-config.props" Condition="exists('solution-config.props')" />
</Project>
